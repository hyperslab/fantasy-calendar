# Generated by Django 4.2.1 on 2023-07-12 14:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('fantasycalendar', '0015_world_public'),
    ]

    operations = [
        migrations.AddField(
            model_name='timeunit',
            name='secondary_date_format',
            field=models.ForeignKey(blank=True, help_text='<span class="tooltip">?<span class="tooltip-text">The format for instances of this time unit to be displayed as in less prominent locations; often an abbreviation of the default date format</span></span>', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timeunit_secondary_set', to='fantasycalendar.dateformat'),
        ),
        migrations.AlterField(
            model_name='calendar',
            name='calendar_name',
            field=models.CharField(help_text='<span class="tooltip">?<span class="tooltip-text">The name of this calendar</span></span>', max_length=200),
        ),
        migrations.AlterField(
            model_name='calendar',
            name='default_display_config',
            field=models.ForeignKey(blank=True, help_text='<span class="tooltip">?<span class="tooltip-text">The display configuration for this calendar to use when initially loading into the page</span></span>', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='fantasycalendar.displayconfig'),
        ),
        migrations.AlterField(
            model_name='datebookmark',
            name='bookmark_iteration',
            field=models.IntegerField(help_text='<span class="tooltip">?<span class="tooltip-text">The instance of the specified time unit type for this bookmark to link to</span></span>'),
        ),
        migrations.AlterField(
            model_name='datebookmark',
            name='bookmark_unit',
            field=models.ForeignKey(help_text='<span class="tooltip">?<span class="tooltip-text">The type of time unit that this bookmark is for</span></span>', on_delete=django.db.models.deletion.CASCADE, to='fantasycalendar.timeunit'),
        ),
        migrations.AlterField(
            model_name='datebookmark',
            name='date_bookmark_name',
            field=models.CharField(blank=True, help_text='<span class="tooltip">?<span class="tooltip-text">The name of this date bookmark</span></span>', max_length=200),
        ),
        migrations.AlterField(
            model_name='dateformat',
            name='date_format_name',
            field=models.CharField(help_text='<span class="tooltip">?<span class="tooltip-text">The name of this date format</span></span>', max_length=200),
        ),
        migrations.AlterField(
            model_name='dateformat',
            name='format_string',
            field=models.CharField(help_text='<span class="tooltip">?<span class="tooltip-text">A representation of the rules for formatting the date; use curly braces containing\n1) the ID of the parent time unit\n2) the ID of the time unit in question\n3) "i" for the numeric iteration or "n" for the name\nseparated by dashes to display information about the specific date being formatted, e.g. {02-01-i} (you can use the Format String Helper to generate this text for you); all other characters will be displayed as-is</span></span>', max_length=200),
        ),
        migrations.AlterField(
            model_name='displayconfig',
            name='default_date_bookmark',
            field=models.ForeignKey(blank=True, help_text='<span class="tooltip">?<span class="tooltip-text">The date to show by default when this display configuration is initially loaded</span></span>', null=True, on_delete=django.db.models.deletion.CASCADE, to='fantasycalendar.datebookmark'),
        ),
        migrations.AlterField(
            model_name='displayconfig',
            name='display_config_name',
            field=models.CharField(help_text='<span class="tooltip">?<span class="tooltip-text">The name of this display configuration</span></span>', max_length=200),
        ),
        migrations.AlterField(
            model_name='displayconfig',
            name='display_unit',
            field=models.ForeignKey(help_text='<span class="tooltip">?<span class="tooltip-text">The type of time unit to display</span></span>', on_delete=django.db.models.deletion.CASCADE, to='fantasycalendar.timeunit'),
        ),
        migrations.AlterField(
            model_name='displayconfig',
            name='nest_level',
            field=models.IntegerField(default=0, help_text='<span class="tooltip">?<span class="tooltip-text">"0" for no nested display, "1" for nested display</span></span>'),
        ),
        migrations.AlterField(
            model_name='event',
            name='bottom_level_iteration',
            field=models.BigIntegerField(help_text='<span class="tooltip">?<span class="tooltip-text">The bottom level time unit ("Day" by default) instance that this event takes place on</span></span>'),
        ),
        migrations.AlterField(
            model_name='event',
            name='event_description',
            field=models.TextField(blank=True, help_text='<span class="tooltip">?<span class="tooltip-text">A description for this event</span></span>', max_length=800),
        ),
        migrations.AlterField(
            model_name='event',
            name='event_name',
            field=models.CharField(help_text='<span class="tooltip">?<span class="tooltip-text">The name of this event</span></span>', max_length=200),
        ),
        migrations.AlterField(
            model_name='timeunit',
            name='base_unit',
            field=models.ForeignKey(blank=True, help_text='<span class="tooltip">?<span class="tooltip-text">The type of time unit that this time unit consists of,  e.g. "Year" could have a base unit of "Month"</span></span>', null=True, on_delete=django.db.models.deletion.CASCADE, to='fantasycalendar.timeunit'),
        ),
        migrations.AlterField(
            model_name='timeunit',
            name='base_unit_instance_names',
            field=models.CharField(blank=True, default='', help_text='<span class="tooltip">?<span class="tooltip-text">The name(s) of each instance of a base time unit within this time unit, separated by spaces, e.g. "Year" could have base units called "January February (...) December"</span></span>', max_length=800),
        ),
        migrations.AlterField(
            model_name='timeunit',
            name='default_date_format',
            field=models.ForeignKey(blank=True, help_text='<span class="tooltip">?<span class="tooltip-text">The format for instances of this time unit to be displayed as most prominently</span></span>', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timeunit_default_set', to='fantasycalendar.dateformat'),
        ),
        migrations.AlterField(
            model_name='timeunit',
            name='length_cycle',
            field=models.CharField(default='1', help_text='<span class="tooltip">?<span class="tooltip-text">The number of base time units in this time unit; if the length varies, specify multiple lengths separated by spaces, e.g. "10 11 12" would result in a length of 10, then 11, then 12, then repeat from 10, etc.</span></span>', max_length=800),
        ),
        migrations.AlterField(
            model_name='timeunit',
            name='time_unit_name',
            field=models.CharField(default='', help_text='<span class="tooltip">?<span class="tooltip-text">The name of this time unit, e.g. "Month" or "Day"</span></span>', max_length=200),
        ),
        migrations.AlterField(
            model_name='world',
            name='public',
            field=models.BooleanField(default=False, help_text='<span class="tooltip">?<span class="tooltip-text">Whether this world is viewable by other people</span></span>'),
        ),
        migrations.AlterField(
            model_name='world',
            name='world_name',
            field=models.CharField(help_text='<span class="tooltip">?<span class="tooltip-text">The name of this world</span></span>', max_length=200),
        ),
    ]
